#!/bin/bash

# Verify that the target directory of a dirinstall is a mountpoint, and that
# it is, for all practical purposes, empty.

is_fstab_mountpoint() {
    local directory="$1"
    # Ideally, we should be using getmntent(3).  If parsing /etc/fstab
    # manually, we should interpret \nnn in the mountpoint as as octal ASCII
    # values.  But this is just a hack.
    cat /etc/fstab | sed -e 's/#.*//' | awk -v directory="$directory" '
        BEGIN { notfound = 1 }
        $2 == directory { notfound = 0 }
        END { exit notfound }
    '
}

junk_in_mountpoint() {
    local target="$1"
    ( cd "$target" ;
      find . -type d \
	     -path ./proc -prune -o \
	     -path ./sys -prune -o \
	     -path ./var/lib/fai -prune -o \
	     -path ./var/log/fai -prune -o \
	     -path ./data -prune -o \
	     -path ./var/lib -o \
	     -path ./var/log -o \
	     -path ./var -o \
	     -path . -o \
	     -name lost+found -o \
	     -print ) |
    sed -e 's/^\.//' |
    while read f ; do
        if ! is_fstab_mountpoint "$f" ; then
            echo "$f" 2>/dev/null
        fi
    done
}

confirm() {
    local prompt="$1"
    local affirmative_option="$2" negative_option="$3" default_option="$4"
    local choice ; unset choice
    while true ; do
        echo -n "$prompt"
        read choice
        choice=`echo "$choice" | tr A-Z a-z`
        [ "$choice" = '' ] && choice="$default_option"
        case "$choice" in
          "$affirmative_option"*)
            case "$choice" in "$negative_option"*) :;; *) return 0 ;; esac
            ;;
          "$negative_option"*)
            case "$choice" in "$affirmative_option"*) :;; *) return 1 ;; esac
            ;;
        esac
    done
}

junk=`junk_in_mountpoint "$target" | head -n 1`
if [ -n "$junk" ]; then
    echo "$target is not an empty mountpoint."
    if ! confirm "Do you REALLY want to install to $target (y/N)? " y n n ; then
        echo "Stopping installation by user choice."
        exit 1
    fi
fi
