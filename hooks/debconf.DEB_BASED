#!/bin/bash

# Hook to configure installation destination for GRUB when installing a
# Debian-based target OS.  In Debian-based systems, the postinst script for the
# grub-pc or grub-efi-amd64 runs grub-install.  All we have to do is recommend
# an installation destination device by setting a debconf entry.  (This is safe
# to do regardless of whether the system is BIOS or EFI or whether we want to
# install GRUB at all.)
#
# In contrast, RPMs of GRUB do not automatically run the GRUB installer.  See
# scripts/RPM_BASED/50-grub.

error=0; trap 'error=$(($?>$error?$?:$error))' ERR # save maximum error code

. /usr/lib/fai/subroutines

# Find the physical devices on which the given partitions reside, tracing
# through MD and LVM layers if necessary.
resolve_to_phys_dev() {
    stat -L --format '%t %T %n' $@ | while read -r major_hex minor_hex dev ; do
        major=$((0x$major_hex))
        minor=$((0x$minor_hex))
        if [ -f "/sys/dev/block/$major:$minor/partition" ]; then
            partition=$(cat "/sys/dev/block/$major:$minor/partition")
            minor=$(($minor - $partition))
            dev="/dev/$(basename $(readlink "/sys/dev/block/$major:$minor"))"
        fi
        if [ -e "/sys/dev/block/$major:$minor/device" ]; then
            # This is a physical device
            echo "$dev"
        elif [ -d "/sys/dev/block/$major:$minor/slaves" ]; then
            # This is a MD or LVM member
            for slave in /sys/dev/block/$major:$minor/slaves/* ; do
                resolve_to_phys_dev "/dev/$(basename $slave)"
            done
        fi
    done | sort -u
}

# Get $BOOT_DEVICE from disk config
. $LOGDIR/disk_var.sh

if ifclass DISK2 ; then
    bootdisks=$(echo $disklist | awk '{printf "/dev/%s /dev/%s", $1, $2}')
elif [ -n "$BOOT_DEVICE" ]; then
    bootdisks=$(resolve_to_phys_dev "$BOOT_DEVICE" | xargs echo -n)
elif [ -x /usr/bin/debconf-get-selections ]; then
    # Doing a dirinstall, maybe?  Hopefully not trying to dirinstall a
    # Debian-based system while running an RPM-based OS.
    bootdisks=$(/usr/bin/debconf-get-selections | awk '
        $1 == "grub-pc" && $2 == "grub-pc/install_devices" && $3 == "multiselect" {
            $1 = $2 = $3 = "";
            print;
        }
    ' | sed -e 's/^\s\+//')
else
    # Desperate effort: use all disks that FAI has detected
    set_disk_info
fi

if [ -z "$bootdisks" ]; then
    echo "ERROR: Boot disk could not be determined"
    exit 1
fi

cat <<-CONF | tee -a $LOGDIR/debconf.data \
            | $ROOTCMD debconf-set-selections -v \
            2>> $LOGDIR/debconf.log
	grub-pc grub-pc/install_devices multiselect $bootdisks
CONF

exit $error
