# FAI executes these default tasks in the following order:
#   confdir     Mount or obtain the $FAI configuration directory
#   setup       Set clock, define $FAI_FLAGS, start VTs, start sshd
#   defclass    Define classes
#   defvar      Source $FAI/$class/*.var and /tmp/fai/additional.var
#   action      Decide action - sysinfo, install, softupdate, or custom action
#   sysinfo     If action=sysinfo, show hardware info, mount /target readonly
#   install     If action=install, 3 beeps, call tasks partition...savelog
#   dirinstall  If action=dirinstall, call tasks extrbase...finish, savelog
#   softupdate  If action=softupdate, update an existing installation
#
#   partition   Run setup-storage, write /tmp/fai/disk_var.sh and fstab
#   mountdisks  Mount partitions using /tmp/fai/fstab relative to $FAI_ROOT
#   extrbase    Run debootstrap (use /var/tmp/base.tgz as a shortcut)
#   mirror      If $FAI_DEBMIRROR is NFS, mount it to $MNTPOINT
#   debconf     Fill debconf database by running `fai-debconf $FAI/debconf`
#   prepareapt  Set up resolv.conf and other files for the next task updatebase
#   updatebase  Mount /proc et al, make diversions, apt-key add, apt-get update
#   instsoft    Install packages as directed by $FAI/package_config
#   configure   Call scripts in $FAI/scripts/ and subdirectories
#   tests       Call scripts in $FAI/tests/ and subdirectories
#   finish      Unmount target filesystems, undo fai-divert diversions
#   chboot      Execute fai-chboot on the server
#   savelog     Copy local logs to account $LOGUSER on $LOGSERVER
#
#   faiend      Wait for bg jobs to finish, reboot if appropriate
#
# Most hooks are called before the task of the same name.  This file,
# $FAI/hooks/subroutines, is a special case.  It is called in the early stages
# of the setup task, which is the earliest opportunity for the contents of the
# $FAI configuration directory to influence anything.  Note that this means
# that there is no confdir or setup hook, since the $FAI configuration space is
# not yet available at the time that those hooks would run.
#
# In addition to completing the establishment of the $FAI configuration
# directory, you can define and override FAI builtin functions here.
#
# Since this file is sourced by bash rather than executed, please take care to
# avoid introducing unintentional side effects.  A good convention to follow
# would be to wrap as much functionality as possible in shell functions with
# local variables.  The shell functions should be named ece_something() to
# distinguish them from FAI builtin functions.

ece_setup_git() {
    local saved_pwd old_ref new_ref
    local git_cmd

    git_cmd="git --work-tree=$FAI --git-dir=$FAI/.git"
    if [ -n "$FAI_CONFIG_SRC_REF" ]; then
        # git-checkout a particular branch, tag, or commit of the configuration
        # space
        old_ref=`$git_cmd rev-parse HEAD`
        $git_cmd checkout "$FAI_CONFIG_SRC_REF"
        new_ref=`$git_cmd rev-parse HEAD`

        if [ "$new_ref" != "$old_ref" ]; then
            echo "Checked out $FAI_CONFIG_SRC_REF of $FAI_CONFIG_SRC."
            echo "Running $FAI/hooks/subroutines again."
            . $FAI/hooks/subroutines
            return
        fi
    fi
    $git_cmd log -n 1 --pretty=format:"Using git ref %h of $FAI_CONFIG_SRC"
}

ece_setup_hook() {
    case "$FAI_CONFIG_SRC" in
      git*) ece_setup_git ;;
    esac
}

ece_setup_hook


# 2007-09-16 Chris Dumont
# See "FAI and secrets.txt" for extensive background.
# This script attempts to be idempotent.
#
# 2008-01-04 Updated for new framework.
#
# 2009-10-07 Derek Poon <derekp@ece.ubc.ca>: Abort if rsync fails
# 2011-11-21 Derek Poon <derekp@ece.ubc.ca>: chmod 600 /etc/ssh/*.[dr]sa

# Should probably make this pay attention to classes.

#. /etc/fai/fai.conf

#sleepy() {
#  sleep 161
#}
#trap sleepy ERR

DIRS="/etc/ssh /root/.ssh /var/lib/cfengine2/ppkeys "

SS="/etc/ssh/ssh_host_dsa_key /etc/ssh/ssh_host_rsa_key \
/etc/ssh/*.rsa /etc/ssh/*.dsa \
/root/.ssh/id_dsa /root/.ssh/id_rsa /var/lib/cfengine2/ppkeys/localhost.priv"

SSD="/var/lib/cfengine2/ppkeys "

# 2012-12-19 Derek Poon <derekp@ece.ubc.ca>
# On machines with less than 512 MiB RAM, don't use a performance-boosting
# ramdisk
if [ -z "$FAI_RAMDISKS" ]; then
    FAI_RAMDISKS=`free -m | awk '/Mem/ { if ($2 < 512) print "none" }'`
    export FAI_RAMDISKS
fi

if [ -f /.THIS_IS_THE_FAI_NFSROOT ]; then
  for i in $DIRS ; do
    if ! mount | grep -q " on ${i} type " ; then
      echo "Creating writable ${i}"
      SCRATCH=`mktemp -d`
      rsync -a ${i}/ ${SCRATCH}/ # Trailing slashes are important with rsync.
      mount tmpfs $i -t tmpfs
      rsync -a ${SCRATCH}/ ${i}/
      rm -rf ${SCRATCH}
    fi
  done
fi

for i in $DIRS ; do
  mkdir -p ${i}
  if rsync -a fai@${SERVER}:${FAI_HSEXPORTS}/`hostname`/${i}/ ${i}/ ; then
    echo "Sync'ed ${i}."
  else
    case "$FAI_ACTION" in
      install)
        echo "ERROR: Failed to sync ${i}.  No permission to perform FAI?"
        sleep 3543
        exit 1
        ;;
      dirinstall)
        echo "Failed to sync. "
        echo "If you're seeing this message in LAST/40-ssh then you're too late. Try again. :-) "
        echo "While dirinstall is proceeding edit huey:/etc/security/sshd.conf and insert the line:"
        echo "+:fai : `hostname -f`"
        sleep 56
        ;;
      *)
        echo "ERROR: Failed to sync ${i}.  No permission to perform FAI? Hope we're in 'rescue' or 'dirinstall' mode. "
        ;;
    esac
  fi
  chown -R root:root ${i}
  find ${i} -type f -exec chmod 644 {} \;
  find ${i} -type d -exec chmod 755 {} \;
  # This must be done immediately otherwise the above rsync will fail on the
  # iteration after doing /root.
  for j in $SS ; do
    [ -f $j ] && chmod 600 $j
  done
  for j in $SSD ; do
    [ -d $j ] && chmod 700 $j
  done
done

# This will skip when called by task_setup (early in the install) but should
# go ahead when called by LAST/40-ssh (late in the install).
if mount | grep -q " on ${target} type " || [ "$FAI_ACTION" = "dirinstall" ] && [ "x${NOWLAST}" = "xyes" ] ; then
  for i in $DIRS ; do
    mkdir -p ${target}/${i}
    rsync -a ${i}/ ${target}/${i}/
    echo "rsynced ${i}/ to ${target}/${i}/"
  done
fi

######################################################
# 2012-02-21 Chris Dumont. This is for fai-client 3.4.7 and 3.4.8. In
# /usr/lib/fai/subroutines task_setup (line 254?) calls ntpdate which is
# deprecated. Check if the next bit is still a necessary replacement.

if [ $do_init_tasks -eq 1 ] ; then
  dpkg -l fai-client 2>&1 | egrep -q "fai-client *3.4.7 |fai-client *3.4.8 "
  if [ $? -eq 1 ]; then
    echo "fai-client version number has advanced. Maybe I'm no longer needed. Pausing so you can examine the situation"
    sleep 3649
  else
    ntpd -g -q
  fi
fi
######################################################
