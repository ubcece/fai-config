#! /bin/bash

# Script to determine the OS classes.

# If an "OS class" is explicitly specified, use that class to define
# the OS to install.  Otherwise, generate OS classes based on the
# NFSroot's OS

# explicit_class(): extract the class that are prefixed by the supported OS
# distributions (currently DEBIAN and UBUNTU) - assuming only one specified

explicit_class() {
    for class in "$@"; do
        if [[ $class =~ ^(DEBIAN|UBUNTU).* ]]; then
            echo "$class"
            return 0
        fi
    done
    return 1
}

# nfsroot_class(): generate the OS class based on the OS of NFSroot

nfsroot_class() {
    lsb_release -ir 2>/dev/null | awk \
       '/Distributor/ {distribution=toupper($3)}
        /Release/ {release=$2; gsub(/\./, "_", release)}
        END {print distribution "_" release;}'
}

# reduce_versions(): recursively generate new OS classes by
# sequentially stripping the "_" suffix

reduce_versions() {
    OS="$1"; skipOS="$2"

    [ "$OS" != "$skipOS" ] && echo "$OS"

    case "$OS" in
        *_*)
            reduce_versions "${OS%_*}" "$skipOS"
    esac 
}

# main script:

# check if an OS class have been explicity defined

EXPLICIT_OS=$(explicit_class $classes)

if [ -z "$EXPLICIT_OS" ]; then
    # if OS class has not been defined then generate OS class
    # based on the OS of NFSroot

    OS=$(nfsroot_class)

else
    # else provide the stable version of OS if a version has
    # not been provided

    case "$EXPLICIT_OS" in
        DEBIAN)
            OS="DEBIAN_6"
            ;;
        UBUNTU)
            OS="UBUNTU_14_04"
            ;;
        *)
            OS="$EXPLICIT_OS"
            ;;
    esac
fi

# generate the list of OS classes based on OS version specified

reduce_versions "$OS" "$EXPLICIT_OS"

exit 0
