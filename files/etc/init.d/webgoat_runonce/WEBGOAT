#!/bin/bash
### BEGIN INIT INFO
# Provides:          ece_webgoat_init 
# Required-Start:    $network $time $local_fs $syslog 
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Runs WebGoat initialization scripts. 
# Description:       Runs WebGoat initialization scripts,
#                    need to be run once ever in the life of the OS.
### END INIT INFO

#--------
# YingW - 2014-10-08
#--------

ROOT="/usr/local/WEBGOAT_SETUP"
WEBGOAT_VER="5.4"

#set -e 

# include functions.sh
#. functions.sh

if [ -f "/root/webgoat_runonce" ];
then
	echo "WebGoat bootstrap already completed. To re-run, remove file /root/webgoat_runonce ."
	exit
fi

# creating directories
if [ ! -d "${ROOT}/internal" ];
then
	mkdir ${ROOT}/internal -p
fi

# enable Apache modules
[[ `dpkg --list | grep apache2 2>&1 /dev/null` -eq 0 ]] && a2enmod proxy_http rewrite

# modify monitrc files to enable http and mail out
 
if [ ! -f "${ROOT}/internal/tomcat-users.xml" ];
then
	${ROOT}/webgoat_users.sh	
	if [ $? != 0 ];
	then
		echo -n "Cannot create Tomcat user credentials. See webgoat_users.sh ."
		#exit 1
	fi
fi

# copy over tomcat-user files for WebGoat basic authentication
cp ${ROOT}/internal/tomcat-users.xml /etc/tomcat7
echo -n "User credentials created. Available in ${SETUP}/includes ."

# copy over WebGoat WAR for deployment
cp ${ROOT}/WebGoat-${WEBGOAT_VER}.war /var/lib/tomcat7/webapps/WebGoat.war
chown root:tomcat7 /var/lib/tomcat7/webapps/WebGoat.war
service tomcat7 restart

# copy over Apache config
cp ${ROOT}/apache.conf /etc/apache2/sites-available/000-default.conf
# restart apache after config recreation
service apache2 restart

# copy over iptables rules
cp ${ROOT}/iptables.rules /etc/iptables/rules.v4
iptables-restore < ${ROOT}/iptables.rules

cp ${ROOT}/monitrc /etc/monit
service monit restart

# Removes WAR file to disable Tomcat from auto-deploy on restart
#removeWar

# Ensure it doesn't run again..
touch /root/webgoat_runonce

exit 0

# vim: set filetype=sh
